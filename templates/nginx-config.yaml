{{- if .Values.nginx.enabled }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ template "cortex.fullname" . }}-nginx
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "cortex.name" . }}-nginx
    chart: {{ template "cortex.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  nginx.conf: |-
    worker_processes  5;  ## Default: 1
    error_log  /dev/stderr;
    pid        /tmp/nginx.pid;
    worker_rlimit_nofile 8192;

    events {
      worker_connections  4096;  ## Default: 1024
    }


    http {
      default_type application/octet-stream;
      log_format   main '$remote_addr - $remote_user [$time_local]  $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for" $http_x_scope_orgid';
      access_log   /dev/stderr  main;
      sendfile     on;
      tcp_nopush   on;
      resolver {{ default "kube-dns.kube-system.svc.cluster.local" .Values.nginx.config.dnsResolver }};
{{- if .Values.config.auth_enabled }}
      map $http_x_org_scopeid $scopeid {
            default   $http_x_org_scopeid;
            ""        "{{ .Values.auth.defaultScope }}";
      }
{{- end }}
      server { # simple reverse-proxy
        listen {{ .Values.nginx.http_listen_port }};
{{- if .Values.config.auth_enabled }}
        proxy_set_header X-Scope-OrgID $scopeid;
{{- end }}
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        location = /healthz {
          return 200 'alive';
        }

        location = /api/prom/push {
          proxy_pass      http://{{ template "cortex.fullname" . }}-distributor.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.config.server.http_listen_port }}$request_uri;
        }

        location = /ring {
          proxy_pass      http://{{ template "cortex.fullname" . }}-distributor.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.config.server.http_listen_port }}$request_uri;
        }

        location = /all_user_stats {
          proxy_pass      http://{{ template "cortex.fullname" . }}-distributor.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.config.server.http_listen_port }}$request_uri;
        }

        location ~ /api/prom/.* {
          proxy_pass      http://{{ template "cortex.fullname" . }}-query-frontend.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.config.server.http_listen_port }}$request_uri;
        }

        # Alertmanager Config
        location ~ /api/v1/alerts {
          proxy_pass      http://{{ template "cortex.fullname" . }}-alertmanager.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.config.server.http_listen_port }}$request_uri;
        }

        location ~ /multitenant_alertmanager/status {
          proxy_pass      http://{{ template "cortex.fullname" . }}-alertmanager.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.config.server.http_listen_port }}$request_uri;
        }

{{- $root := . }}
{{- range .Values.alertmanager.ui.scopeIDs }}
{{ $rootScope := . }}
        location = /alerts/{{ $rootScope.scopeName }} {
          proxy_set_header X-Scope-OrgID {{ $rootScope.scopeID }};
          proxy_pass      http://{{ template "cortex.fullname" $root }}-alertmanager.{{ $root.Release.Namespace }}.svc.cluster.local:{{ $root.Values.config.server.http_listen_port }}/api/prom/alertmanager/;
        }

        location ~ /alerts/{{ $rootScope.scopeName }}/(.*) {
          proxy_set_header X-Scope-OrgID {{ $rootScope.scopeID }};
          proxy_pass      http://{{ template "cortex.fullname" $root }}-alertmanager.{{ $root.Release.Namespace }}.svc.cluster.local:{{ $root.Values.config.server.http_listen_port }}/api/prom/alertmanager/$1;
        }
{{- end }}

        # Ruler Config
        location ~ /api/v1/rules {
          proxy_pass      http://{{ template "cortex.fullname" . }}-ruler.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.config.server.http_listen_port }}$request_uri;
        }

        location ~ /ruler/ring {
          proxy_pass      http://{{ template "cortex.fullname" . }}-ruler.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.config.server.http_listen_port }}$request_uri;
        }
      }
    }
{{- end }}
